<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAABIBJREFUeF7t
        mmuIVVUYhmcqs0ghLyVRglkmKpIGEyGYE9SPgQIZms7cGwcbQYiEkIKoBiLoZxISEUKQVGZFSlBIN6J+
        RPRDLNS8/BAUvJRolpcCe77pnWHtb84M58yZvV1H1gMvZ89+v/Wtb619OWvvMw2JRCKRSCQSiUT+tLe3
        L+/q6nqps7NzF5970HFpj+3r7u5+kc9lCr86GBwcvIZBtaP9DPRyhdrHZDxB88b/s9Qpvb299zCYn93g
        KhaT9lOpVLpL6eqLjo6OxxjEn35QE9BZ9KjS1gccuYco+lIwiCGx/wKf7/LZiuajGZJtt3Lab+XTYjLt
        0EUmdJXSx42dshR8yg3AtJ2b4DyFjUlPT8+dTMJHZdqfNE9h0dJIoT+6wv/lyD4jv2Jot8HaBnlMP2DF
        e2NkoB2uYNN62VVD26ddrsv6dogSO/p7XcGfyJsojQx4p8v5q7y4oLAmV+hf6A7ZE8buG/7GyKTcJzse
        KOyVsEj0nqyaIde2MDcTMCgrHijq27BIVJJVM+TqdLm/lhUPFHUgLJIJuVtWzZBrYZibS2K/rHigsMyq
        r62tbZqsmunv758e5kZnZcUDRZ0Li2TRcpOsmqmXCfgtLNIehGTVjL8E0F5Z8ZDnTZDcmQUW94CvZMUD
        hRX2NcgEvCwrHihqWVgkujQZlwF5FqN/grympbKjIo+lsE3ADpczzqWwwbW62hVrel521dD2BZfLFPXL
        kbwfh7+XHS95vhCppH0UMIAxX4lxNryPevl7cV9f3w2sGG+0bfQk+sBiLNapfl6JDWMFM9ATZQZTrU6R
        p1lp6wuKfwAdCQZTlRj4MbRC6eoHTuuZnMpvjHE6V6vz5Hmdy+VmpY8bCi5N0qnvZT+hPa5u4mNgYGAK
        A3/LFZ0RR/ILYuwG2MQ9Yg5/D/0uYNu2zzz+tt8Ny7aXNltf6jYO7Nm/gsLtmt6pJmNC3Ke+XRl9PpmP
        2zXR0tIylYK+dAWa7P3AZrfP9KyajsI8F2uyHPaC1e//rLm5+To1vXJQyDuusKFXVhyhRfK/8z7aztmw
        cngdQPyD7PvYxZi+sRxcIkvYzrxvkDaZf8VgEKN+CGHfbgZ/q0KGX2ac9nEV6A8mZoHS2CTMsdw+jphW
        hRQLR+4WCvBL3gNWqEJGYN8qvN9d7Hiyxc9KNR+BfbfhHXaxx3nsnqWQ4mDm33aFnGOgS2SPgvj5xJS7
        V2RE3C57HlCzUTAJ9xL3t2v3puxi4KFkLp1edEVskD0uDOARYregQwz2goltO6pb2H5YYeNCjo3Ej/Rt
        OTgLbpedPxTwWlgA2lfkHVlrjoNhDUzCq7LzhWv/Wjo8GnZOMWtkFwb9PhXWgI7Y/yPJzg8Gu8J1fMa+
        ymQXhi2E6DvzYwxnwf2y84OOMq+pmJCtsgqH/v3b4udk5QcdZRYsTMBaWYVD3+tcLR/Kyg86+iXsFDXJ
        Khz6tvcN4QTslpUfdJRZ/PDdP1tW4diKM6yFCTghKz/oKPP9zw3welmFowexkVpsPSArkUgkEolEIpEY
        l4aG/wD4OQNdOSXh0wAAAABJRU5ErkJggg==
</value>
  </data>
</root>